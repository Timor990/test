{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"captchaCanvas\",\n  width: \"200\",\n  height: \"80\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */), _createElementVNode(\"text\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.handleClick && $options.handleClick(...args)),\n    style: _normalizeStyle({\n      fontSize: 10,\n      color: $options.textColor,\n      textDecoration: 'underline',\n      cursor: 'pointer'\n    })\n  }, \"刷新验证码\", 4 /* STYLE */)]), _cache[1] || (_cache[1] = _createElementVNode(\"div\", null, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["ref","width","height","_createElementBlock","_createElementVNode","_hoisted_1","onClick","_cache","args","$options","handleClick","style","_normalizeStyle","fontSize","color","textColor","textDecoration","cursor"],"sources":["E:\\停车公司项目\\3.信息部工作\\webApp\\webapp\\src\\views\\login\\components\\captcha.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <canvas ref=\"captchaCanvas\" width=\"200\" height=\"80\"></canvas>\r\n      <text @click=\"handleClick\"   :style=\"{fontSize:10, color: textColor, textDecoration: 'underline', cursor: 'pointer' }\">刷新验证码</text>\r\n\r\n    </div>\r\n    <div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n  name:'Captcha',\r\n  props(){\r\n\r\n  },\r\n  data(){\r\n    return {\r\n      captchaText:'',\r\n      isClicked:false\r\n    }\r\n  },\r\n  computed:{\r\n    textColor(){\r\n      return this.isClicked ? 'purple' : 'blue'; // 根据状态返回颜色\r\n    }\r\n  },\r\n  mounted(){\r\n    this.generateCaptcha();\r\n  },\r\n  methods:{\r\n    handleClick(){\r\n      this.isClicked=true;\r\n      this.generateCaptcha();\r\n    },\r\n    generateCaptcha(){\r\n      const canvas = this.$refs.captchaCanvas;\r\n      const ctx = canvas.getContext('2d');\r\n      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n      this.captchaText = '';\r\n      \r\n      // 生成随机验证码\r\n      for (let i = 0; i < 6; i++) {\r\n        this.captchaText += chars.charAt(Math.floor(Math.random() * chars.length));\r\n      }\r\n\r\n      // 清空画布\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // 设置背景色\r\n      ctx.fillStyle = '#f0f0f0';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      console.log(canvas.width)\r\n      console.log(canvas.height)\r\n      // 添加一些干扰线\r\n      for (let i = 0; i < 5; i++) {\r\n        ctx.strokeStyle = this.getRandomColor();\r\n        ctx.beginPath();\r\n        let tempWidth=Math.random() * canvas.width;\r\n        let tempHeigt=Math.random() * canvas.height\r\n        console.log(tempWidth)\r\n        console.log(tempHeigt)\r\n        ctx.moveTo(tempWidth,tempHeigt );\r\n        ctx.lineTo(Math.random() * canvas.width, Math.random() * canvas.height);\r\n        ctx.stroke();\r\n      }\r\n      console.log(this.captchaText)\r\n      // 绘制验证码字符\r\n      for (let i = 0; i < this.captchaText.length; i++) {\r\n        ctx.font = `${this.getRandomFontSize()}px Arial`;\r\n        ctx.fillStyle = this.getRandomColor();\r\n        ctx.save();\r\n        \r\n        // 随机旋转字符\r\n        ctx.translate(30 * i + 20, canvas.height / 2 + Math.random() * 10 - 5);\r\n        ctx.rotate((Math.random() - 0.5) * Math.PI / 6); // 随机旋转 -30° 到 30°\r\n        ctx.fillText(this.captchaText[i], 0, 0);\r\n        ctx.restore();\r\n      }\r\n    },\r\n    getRandomColor() {\r\n      const letters = '0123456789ABCDEF';\r\n      let color = '#';\r\n      for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n      }\r\n      return color;\r\n    },\r\n    getRandomFontSize() {\r\n      return Math.floor(Math.random() * 10) + 20; // 随机字体大小 20px 到 30px\r\n    },\r\n\r\n}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.text1{\r\n  text-decoration: underline;\r\n  cursor:pointer ;\r\n  color:blue;\r\n}\r\n.text2{\r\n  text-decoration: underline;\r\n  cursor:pointer ;\r\n  color:purple\r\n}\r\n</style>"],"mappings":";;EAGcA,GAAG,EAAC,eAAe;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;uBAFnDC,mBAAA,CAQM,cAPJC,mBAAA,CAIM,cAHJA,mBAAA,CAA6D,UAA7DC,UAA6D,+BAC7DD,mBAAA,CAAmI;IAA5HE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAKG,KAAK,EAJzCC,eAAA;MAAAC,QAAA;MAAAC,KAAA,EAIgEL,QAAA,CAAAM,SAAS;MAAAC,cAAA;MAAAC,MAAA;IAAA;KAAoD,OAAK,iB,6BAG9Hb,mBAAA,CACM,sC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}