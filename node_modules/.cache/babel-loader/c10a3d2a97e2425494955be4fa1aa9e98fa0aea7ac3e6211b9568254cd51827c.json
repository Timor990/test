{"ast":null,"code":"export default {\n  name: 'Captcha',\n  props() {},\n  data() {\n    return {\n      captchaText: '',\n      isClicked: false\n    };\n  },\n  computed: {\n    textColor() {\n      return this.isClicked ? 'purple' : 'blue'; // 根据状态返回颜色\n    }\n  },\n  mounted() {\n    this.generateCaptcha();\n  },\n  methods: {\n    handleClick() {\n      this.isClicked = true;\n      this.generateCaptcha();\n    },\n    generateCaptcha() {\n      const canvas = this.$refs.captchaCanvas;\n      const ctx = canvas.getContext('2d');\n      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      this.captchaText = '';\n\n      // 生成随机验证码\n      for (let i = 0; i < 6; i++) {\n        this.captchaText += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n\n      // 清空画布\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // 设置背景色\n      ctx.fillStyle = '#f0f0f0';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      console.log(canvas.width);\n      console.log(canvas.height);\n      // 添加一些干扰线\n      for (let i = 0; i < 5; i++) {\n        ctx.strokeStyle = this.getRandomColor();\n        ctx.beginPath();\n        let tempWidth = Math.random() * canvas.width;\n        let tempHeigt = Math.random() * canvas.height;\n        console.log(tempWidth);\n        console.log(tempHeigt);\n        ctx.moveTo(tempWidth, tempHeigt);\n        ctx.lineTo(Math.random() * canvas.width, Math.random() * canvas.height);\n        ctx.stroke();\n      }\n      console.log(this.captchaText);\n      // 绘制验证码字符\n      for (let i = 0; i < this.captchaText.length; i++) {\n        ctx.font = `${this.getRandomFontSize()}px Arial`;\n        ctx.fillStyle = this.getRandomColor();\n        ctx.save();\n\n        // 随机旋转字符\n        ctx.translate(30 * i + 20, canvas.height / 2 + Math.random() * 10 - 5);\n        ctx.rotate((Math.random() - 0.5) * Math.PI / 6); // 随机旋转 -30° 到 30°\n        ctx.fillText(this.captchaText[i], 0, 0);\n        ctx.restore();\n      }\n    },\n    getRandomColor() {\n      const letters = '0123456789ABCDEF';\n      let color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n      return color;\n    },\n    getRandomFontSize() {\n      return Math.floor(Math.random() * 10) + 20; // 随机字体大小 20px 到 30px\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","captchaText","isClicked","computed","textColor","mounted","generateCaptcha","methods","handleClick","canvas","$refs","captchaCanvas","ctx","getContext","chars","i","charAt","Math","floor","random","length","clearRect","width","height","fillStyle","fillRect","console","log","strokeStyle","getRandomColor","beginPath","tempWidth","tempHeigt","moveTo","lineTo","stroke","font","getRandomFontSize","save","translate","rotate","PI","fillText","restore","letters","color"],"sources":["E:\\停车公司项目\\3.信息部工作\\webApp\\webapp\\src\\views\\login\\components\\captcha.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"captcha-container\">\r\n      <canvas ref=\"captchaCanvas\" width=\"200\" height=\"50\"></canvas>\r\n      <el-button class=\"button\" @click=\"handleClick\" ></el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default{\r\n  name:'Captcha',\r\n  props(){\r\n\r\n  },\r\n  data(){\r\n    return {\r\n      captchaText:'',\r\n      isClicked:false\r\n    }\r\n  },\r\n  computed:{\r\n    textColor(){\r\n      return this.isClicked ? 'purple' : 'blue'; // 根据状态返回颜色\r\n    }\r\n  },\r\n  mounted(){\r\n    this.generateCaptcha();\r\n  },\r\n  methods:{\r\n    handleClick(){\r\n      this.isClicked=true;\r\n      this.generateCaptcha();\r\n    },\r\n    generateCaptcha(){\r\n      const canvas = this.$refs.captchaCanvas;\r\n      const ctx = canvas.getContext('2d');\r\n      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n      this.captchaText = '';\r\n      \r\n      // 生成随机验证码\r\n      for (let i = 0; i < 6; i++) {\r\n        this.captchaText += chars.charAt(Math.floor(Math.random() * chars.length));\r\n      }\r\n\r\n      // 清空画布\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // 设置背景色\r\n      ctx.fillStyle = '#f0f0f0';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      console.log(canvas.width)\r\n      console.log(canvas.height)\r\n      // 添加一些干扰线\r\n      for (let i = 0; i < 5; i++) {\r\n        ctx.strokeStyle = this.getRandomColor();\r\n        ctx.beginPath();\r\n        let tempWidth=Math.random() * canvas.width;\r\n        let tempHeigt=Math.random() * canvas.height\r\n        console.log(tempWidth)\r\n        console.log(tempHeigt)\r\n        ctx.moveTo(tempWidth,tempHeigt );\r\n        ctx.lineTo(Math.random() * canvas.width, Math.random() * canvas.height);\r\n        ctx.stroke();\r\n      }\r\n      console.log(this.captchaText)\r\n      // 绘制验证码字符\r\n      for (let i = 0; i < this.captchaText.length; i++) {\r\n        ctx.font = `${this.getRandomFontSize()}px Arial`;\r\n        ctx.fillStyle = this.getRandomColor();\r\n        ctx.save();\r\n        \r\n        // 随机旋转字符\r\n        ctx.translate(30 * i + 20, canvas.height / 2 + Math.random() * 10 - 5);\r\n        ctx.rotate((Math.random() - 0.5) * Math.PI / 6); // 随机旋转 -30° 到 30°\r\n        ctx.fillText(this.captchaText[i], 0, 0);\r\n        ctx.restore();\r\n      }\r\n    },\r\n    getRandomColor() {\r\n      const letters = '0123456789ABCDEF';\r\n      let color = '#';\r\n      for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n      }\r\n      return color;\r\n    },\r\n    getRandomFontSize() {\r\n      return Math.floor(Math.random() * 10) + 20; // 随机字体大小 20px 到 30px\r\n    },\r\n\r\n}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.captcha-container {\r\n  position: relative; /* 设置容器为相对定位 */\r\n  display: inline-block; /* 使容器适应内容 */\r\n}\r\n.text1{\r\n  text-decoration: underline;\r\n  cursor:pointer ;\r\n  color:blue;\r\n}\r\n.text2{\r\n  text-decoration: underline;\r\n  cursor:pointer ;\r\n  color:purple\r\n}\r\n.button{\r\n  position: absolute; \r\n  bottom: 10px; \r\n  right: 5px;\r\n  background-image: url('../../../assets/input.png'); \r\n  background-color: transparent; \r\n  background-size: contain; \r\n  background-repeat: no-repeat;\r\n  color: white; \r\n  border: none; \r\n  width: 20px;\r\n  height: 20px; \r\n  text-align: center;\r\n  display: inline-flex; \r\n  align-items: center; \r\n  justify-content: center; \r\n}\r\n.button:hover {\r\n  opacity: 0.5; \r\n  background-color: transparent; \r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}